{"filter":false,"title":"project2.cpp","tooltip":"/project2/project2.cpp","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":343,"column":25},"end":{"row":343,"column":26},"action":"insert","lines":["o"],"id":485}],[{"start":{"row":343,"column":20},"end":{"row":343,"column":28},"action":"remove","lines":["checkout"],"id":486},{"start":{"row":343,"column":20},"end":{"row":343,"column":28},"action":"insert","lines":["checkout"]}],[{"start":{"row":348,"column":26},"end":{"row":348,"column":27},"action":"insert","lines":["e"],"id":487},{"start":{"row":348,"column":27},"end":{"row":348,"column":28},"action":"insert","lines":["c"]},{"start":{"row":348,"column":28},"end":{"row":348,"column":29},"action":"insert","lines":["k"]},{"start":{"row":348,"column":29},"end":{"row":348,"column":30},"action":"insert","lines":["o"]}],[{"start":{"row":348,"column":24},"end":{"row":348,"column":30},"action":"remove","lines":["checko"],"id":488},{"start":{"row":348,"column":24},"end":{"row":348,"column":32},"action":"insert","lines":["checkout"]}],[{"start":{"row":348,"column":32},"end":{"row":348,"column":33},"action":"insert","lines":[" "],"id":489},{"start":{"row":348,"column":33},"end":{"row":348,"column":34},"action":"insert","lines":["="]},{"start":{"row":348,"column":34},"end":{"row":348,"column":35},"action":"insert","lines":["="]}],[{"start":{"row":348,"column":35},"end":{"row":348,"column":36},"action":"insert","lines":[" "],"id":490},{"start":{"row":348,"column":36},"end":{"row":348,"column":37},"action":"insert","lines":["-"]},{"start":{"row":348,"column":37},"end":{"row":348,"column":38},"action":"insert","lines":["4"]}],[{"start":{"row":348,"column":39},"end":{"row":348,"column":40},"action":"insert","lines":["{"],"id":491}],[{"start":{"row":348,"column":40},"end":{"row":350,"column":17},"action":"insert","lines":["","                    ","                }"],"id":492}],[{"start":{"row":349,"column":20},"end":{"row":349,"column":67},"action":"insert","lines":["cout << strRating << \" is not valid.\" << endl; "],"id":493}],[{"start":{"row":350,"column":17},"end":{"row":351,"column":0},"action":"insert","lines":["",""],"id":494},{"start":{"row":351,"column":0},"end":{"row":351,"column":16},"action":"insert","lines":["                "]},{"start":{"row":351,"column":16},"end":{"row":351,"column":17},"action":"insert","lines":["e"]},{"start":{"row":351,"column":17},"end":{"row":351,"column":18},"action":"insert","lines":["l"]},{"start":{"row":351,"column":18},"end":{"row":351,"column":19},"action":"insert","lines":["s"]},{"start":{"row":351,"column":19},"end":{"row":351,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":351,"column":20},"end":{"row":351,"column":21},"action":"insert","lines":[" "],"id":495},{"start":{"row":351,"column":21},"end":{"row":351,"column":22},"action":"insert","lines":["i"]},{"start":{"row":351,"column":22},"end":{"row":351,"column":23},"action":"insert","lines":["f"]}],[{"start":{"row":351,"column":23},"end":{"row":351,"column":25},"action":"insert","lines":["()"],"id":496}],[{"start":{"row":351,"column":24},"end":{"row":351,"column":25},"action":"insert","lines":["c"],"id":497},{"start":{"row":351,"column":25},"end":{"row":351,"column":26},"action":"insert","lines":["h"]},{"start":{"row":351,"column":26},"end":{"row":351,"column":27},"action":"insert","lines":["e"]},{"start":{"row":351,"column":27},"end":{"row":351,"column":28},"action":"insert","lines":["c"]},{"start":{"row":351,"column":28},"end":{"row":351,"column":29},"action":"insert","lines":["k"]},{"start":{"row":351,"column":29},"end":{"row":351,"column":30},"action":"insert","lines":["o"]},{"start":{"row":351,"column":30},"end":{"row":351,"column":31},"action":"insert","lines":["u"]},{"start":{"row":351,"column":31},"end":{"row":351,"column":32},"action":"insert","lines":["t"]}],[{"start":{"row":351,"column":32},"end":{"row":351,"column":33},"action":"insert","lines":[" "],"id":498}],[{"start":{"row":351,"column":33},"end":{"row":351,"column":34},"action":"insert","lines":["="],"id":499},{"start":{"row":351,"column":34},"end":{"row":351,"column":35},"action":"insert","lines":["="]}],[{"start":{"row":351,"column":35},"end":{"row":351,"column":36},"action":"insert","lines":[" "],"id":500},{"start":{"row":351,"column":36},"end":{"row":351,"column":37},"action":"insert","lines":["0"]},{"start":{"row":351,"column":37},"end":{"row":351,"column":38},"action":"insert","lines":["3"]}],[{"start":{"row":351,"column":37},"end":{"row":351,"column":38},"action":"remove","lines":["3"],"id":501},{"start":{"row":351,"column":36},"end":{"row":351,"column":37},"action":"remove","lines":["0"]}],[{"start":{"row":351,"column":36},"end":{"row":351,"column":37},"action":"insert","lines":["-"],"id":502},{"start":{"row":351,"column":37},"end":{"row":351,"column":38},"action":"insert","lines":["3"]}],[{"start":{"row":351,"column":39},"end":{"row":351,"column":40},"action":"insert","lines":["{"],"id":503}],[{"start":{"row":351,"column":40},"end":{"row":353,"column":17},"action":"insert","lines":["","                    ","                }"],"id":504}],[{"start":{"row":352,"column":20},"end":{"row":352,"column":90},"action":"insert","lines":["cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;"],"id":505}],[{"start":{"row":354,"column":16},"end":{"row":360,"column":0},"action":"remove","lines":["// checkOutBook returned 1","                // cout << \"We hope you enjoyed your book. The rating has been updated.\" << endl;","                // checkOutBook returned -4","                // cout << strRating << \" is not valid.\" << endl; ","                // checkOutBook returned -3","                // cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;",""],"id":506}],[{"start":{"row":359,"column":0},"end":{"row":360,"column":0},"action":"insert","lines":["",""],"id":507},{"start":{"row":360,"column":0},"end":{"row":361,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":360,"column":0},"end":{"row":360,"column":4},"action":"insert","lines":["    "],"id":508}],[{"start":{"row":360,"column":4},"end":{"row":360,"column":8},"action":"insert","lines":["    "],"id":509}],[{"start":{"row":360,"column":8},"end":{"row":360,"column":12},"action":"insert","lines":["    "],"id":510}],[{"start":{"row":360,"column":12},"end":{"row":360,"column":16},"action":"insert","lines":["    "],"id":511}],[{"start":{"row":360,"column":16},"end":{"row":360,"column":20},"action":"insert","lines":["    "],"id":512}],[{"start":{"row":360,"column":16},"end":{"row":360,"column":20},"action":"remove","lines":["    "],"id":513}],[{"start":{"row":360,"column":16},"end":{"row":363,"column":17},"action":"insert","lines":["if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }"],"id":514}],[{"start":{"row":371,"column":0},"end":{"row":372,"column":0},"action":"insert","lines":["",""],"id":515}],[{"start":{"row":372,"column":0},"end":{"row":372,"column":4},"action":"insert","lines":["    "],"id":516}],[{"start":{"row":372,"column":4},"end":{"row":372,"column":8},"action":"insert","lines":["    "],"id":517}],[{"start":{"row":372,"column":8},"end":{"row":372,"column":12},"action":"insert","lines":["    "],"id":518}],[{"start":{"row":372,"column":12},"end":{"row":372,"column":16},"action":"insert","lines":["    "],"id":519}],[{"start":{"row":372,"column":16},"end":{"row":372,"column":17},"action":"insert","lines":["g"],"id":520},{"start":{"row":372,"column":17},"end":{"row":372,"column":18},"action":"insert","lines":["e"]},{"start":{"row":372,"column":18},"end":{"row":372,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":372,"column":19},"end":{"row":372,"column":20},"action":"insert","lines":["R"],"id":521}],[{"start":{"row":372,"column":16},"end":{"row":372,"column":20},"action":"remove","lines":["getR"],"id":522},{"start":{"row":372,"column":16},"end":{"row":372,"column":34},"action":"insert","lines":["getRecommendations"]}],[{"start":{"row":372,"column":34},"end":{"row":372,"column":36},"action":"insert","lines":["()"],"id":523}],[{"start":{"row":372,"column":35},"end":{"row":372,"column":36},"action":"insert","lines":["u"],"id":524},{"start":{"row":372,"column":36},"end":{"row":372,"column":37},"action":"insert","lines":["s"]},{"start":{"row":372,"column":37},"end":{"row":372,"column":38},"action":"insert","lines":["e"]},{"start":{"row":372,"column":38},"end":{"row":372,"column":39},"action":"insert","lines":["r"]}],[{"start":{"row":372,"column":35},"end":{"row":372,"column":39},"action":"remove","lines":["user"],"id":525},{"start":{"row":372,"column":35},"end":{"row":372,"column":43},"action":"insert","lines":["userName"]}],[{"start":{"row":372,"column":44},"end":{"row":372,"column":45},"action":"insert","lines":[";"],"id":526}],[{"start":{"row":103,"column":19},"end":{"row":103,"column":20},"action":"insert","lines":["{"],"id":527}],[{"start":{"row":131,"column":0},"end":{"row":131,"column":4},"action":"insert","lines":["    "],"id":528}],[{"start":{"row":131,"column":4},"end":{"row":131,"column":8},"action":"insert","lines":["    "],"id":529}],[{"start":{"row":131,"column":8},"end":{"row":131,"column":12},"action":"insert","lines":["    "],"id":530}],[{"start":{"row":131,"column":12},"end":{"row":131,"column":16},"action":"insert","lines":["    "],"id":531}],[{"start":{"row":131,"column":16},"end":{"row":131,"column":17},"action":"insert","lines":["}"],"id":532},{"start":{"row":131,"column":0},"end":{"row":131,"column":16},"action":"remove","lines":["                "]},{"start":{"row":131,"column":0},"end":{"row":131,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":132,"column":19},"end":{"row":132,"column":20},"action":"insert","lines":["{"],"id":533}],[{"start":{"row":161,"column":0},"end":{"row":161,"column":4},"action":"insert","lines":["    "],"id":534}],[{"start":{"row":161,"column":4},"end":{"row":161,"column":8},"action":"insert","lines":["    "],"id":535}],[{"start":{"row":161,"column":8},"end":{"row":161,"column":12},"action":"insert","lines":["    "],"id":536}],[{"start":{"row":161,"column":12},"end":{"row":161,"column":13},"action":"insert","lines":["}"],"id":537}],[{"start":{"row":162,"column":19},"end":{"row":162,"column":20},"action":"insert","lines":["{"],"id":538}],[{"start":{"row":179,"column":0},"end":{"row":179,"column":4},"action":"insert","lines":["    "],"id":539}],[{"start":{"row":179,"column":4},"end":{"row":179,"column":8},"action":"insert","lines":["    "],"id":540}],[{"start":{"row":179,"column":8},"end":{"row":179,"column":12},"action":"insert","lines":["    "],"id":541}],[{"start":{"row":179,"column":12},"end":{"row":179,"column":13},"action":"insert","lines":["}"],"id":542}],[{"start":{"row":180,"column":19},"end":{"row":180,"column":20},"action":"insert","lines":["{"],"id":543}],[{"start":{"row":218,"column":0},"end":{"row":218,"column":4},"action":"insert","lines":["    "],"id":544}],[{"start":{"row":218,"column":4},"end":{"row":218,"column":8},"action":"insert","lines":["    "],"id":545}],[{"start":{"row":218,"column":8},"end":{"row":218,"column":12},"action":"insert","lines":["    "],"id":546}],[{"start":{"row":218,"column":12},"end":{"row":218,"column":13},"action":"insert","lines":["}"],"id":547}],[{"start":{"row":219,"column":19},"end":{"row":219,"column":20},"action":"insert","lines":["{"],"id":548}],[{"start":{"row":249,"column":0},"end":{"row":249,"column":4},"action":"insert","lines":["    "],"id":549}],[{"start":{"row":249,"column":4},"end":{"row":249,"column":8},"action":"insert","lines":["    "],"id":550}],[{"start":{"row":249,"column":8},"end":{"row":249,"column":12},"action":"insert","lines":["    "],"id":551}],[{"start":{"row":249,"column":12},"end":{"row":249,"column":13},"action":"insert","lines":["}"],"id":552}],[{"start":{"row":250,"column":19},"end":{"row":250,"column":20},"action":"insert","lines":["{"],"id":553}],[{"start":{"row":269,"column":0},"end":{"row":269,"column":4},"action":"insert","lines":["    "],"id":554}],[{"start":{"row":269,"column":4},"end":{"row":269,"column":8},"action":"insert","lines":["    "],"id":555}],[{"start":{"row":269,"column":8},"end":{"row":269,"column":12},"action":"insert","lines":["    "],"id":556}],[{"start":{"row":269,"column":12},"end":{"row":269,"column":13},"action":"insert","lines":["}"],"id":557}],[{"start":{"row":270,"column":19},"end":{"row":270,"column":20},"action":"insert","lines":["{"],"id":558}],[{"start":{"row":297,"column":22},"end":{"row":298,"column":0},"action":"insert","lines":["",""],"id":559},{"start":{"row":298,"column":0},"end":{"row":298,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":298,"column":12},"end":{"row":298,"column":16},"action":"remove","lines":["    "],"id":560}],[{"start":{"row":298,"column":12},"end":{"row":298,"column":13},"action":"insert","lines":["}"],"id":561}],[{"start":{"row":299,"column":19},"end":{"row":299,"column":20},"action":"insert","lines":["{"],"id":562}],[{"start":{"row":319,"column":22},"end":{"row":320,"column":0},"action":"insert","lines":["",""],"id":563},{"start":{"row":320,"column":0},"end":{"row":320,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":320,"column":12},"end":{"row":320,"column":16},"action":"remove","lines":["    "],"id":564}],[{"start":{"row":320,"column":12},"end":{"row":320,"column":13},"action":"insert","lines":["}"],"id":565}],[{"start":{"row":321,"column":19},"end":{"row":321,"column":20},"action":"insert","lines":["{"],"id":566}],[{"start":{"row":358,"column":22},"end":{"row":359,"column":0},"action":"insert","lines":["",""],"id":567},{"start":{"row":359,"column":0},"end":{"row":359,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":359,"column":12},"end":{"row":359,"column":16},"action":"remove","lines":["    "],"id":568}],[{"start":{"row":359,"column":12},"end":{"row":359,"column":13},"action":"insert","lines":["}"],"id":569}],[{"start":{"row":360,"column":20},"end":{"row":360,"column":21},"action":"insert","lines":["{"],"id":570}],[{"start":{"row":379,"column":0},"end":{"row":379,"column":4},"action":"insert","lines":["    "],"id":571}],[{"start":{"row":379,"column":4},"end":{"row":379,"column":8},"action":"insert","lines":["    "],"id":572}],[{"start":{"row":379,"column":8},"end":{"row":379,"column":12},"action":"insert","lines":["    "],"id":573}],[{"start":{"row":379,"column":12},"end":{"row":379,"column":13},"action":"insert","lines":["}"],"id":574}],[{"start":{"row":380,"column":20},"end":{"row":380,"column":21},"action":"insert","lines":["{"],"id":575}],[{"start":{"row":384,"column":0},"end":{"row":384,"column":4},"action":"insert","lines":["    "],"id":576}],[{"start":{"row":384,"column":4},"end":{"row":384,"column":8},"action":"insert","lines":["    "],"id":577}],[{"start":{"row":384,"column":8},"end":{"row":384,"column":12},"action":"insert","lines":["    "],"id":578}],[{"start":{"row":384,"column":12},"end":{"row":384,"column":13},"action":"insert","lines":["}"],"id":579}],[{"start":{"row":385,"column":20},"end":{"row":385,"column":21},"action":"insert","lines":["{"],"id":580}],[{"start":{"row":387,"column":29},"end":{"row":388,"column":0},"action":"insert","lines":["",""],"id":581},{"start":{"row":388,"column":0},"end":{"row":388,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":388,"column":12},"end":{"row":388,"column":16},"action":"remove","lines":["    "],"id":582}],[{"start":{"row":388,"column":12},"end":{"row":388,"column":13},"action":"insert","lines":["}"],"id":583}],[{"start":{"row":64,"column":0},"end":{"row":389,"column":1},"action":"remove","lines":["void displayMenu(){","\tcout << \"Select a numerical option:\" << endl;","\tcout << \"======Main Menu=====\" << endl;","\tcout << \"1. Read book file\" << endl;","\tcout << \"2. Read user file\" << endl;","\tcout << \"3. Print book list\" << endl;","\tcout << \"4. Get rating\" << endl;","\tcout << \"5. Find number of books user rated\" << endl;","\tcout << \"6. View ratings\" << endl;","\tcout << \"7. Get average rating\" << endl;","\tcout << \"8. Add a user\" << endl;","\tcout << \"9. Checkout a book\" << endl;","\tcout << \"10. Get recommendations\" << endl;","\tcout << \"11. Quit\" << endl;","}","","","int main(int argc, char const *argv[]) {","","","\t// temp variables","    string choice;","    string bookFileName;","    string userFileName;","    string userName, bookTitle;","    string strRating;","","","    while (choice != \"11\") {","        displayMenu();","","        // take a menu opton","        getline(cin, choice);","","        // convert the `choice` to an integer","        int menuChoice = stoi(choice);","","        switch (menuChoice) {","","            case 1:","                // Initialize library -- readBooks","                cout << \"Enter a book file name:\" << endl;","                getline(cin, bookFileName);","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","                int numofbooks = readBooks(bookFileName);","                ","                if (numofbooks == -1){","                    cout << \"No books saved to the database.\" << endl;","                }","                else if (numofbooks == -2){","                    cout << \"Database is already full. No books were added.\" << endl;","                }","                else if(numofbooks ==  50){","                    cout << \"Database is full. Some books may have not been added.\" << endl;","                }","                else{","                    cout << \"Total books in the database: \" << numofbooks << endl;","                }","               ","","","","                cout << endl;","                break;","","            case 2:","                //  Initialize user catalog -- readRatings","","                cout << \"Enter a user file name:\" << endl;","                getline(cin, userFileName);","","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","","                int numofusers = readRatings(userFileName);","                ","                if(numofusers == -1){","                    cout << \"No users saved to the database.\" << endl;","                }","                else if(numofusers == -2){","                    cout << \"Database is already full. No users were added.\" << endl;","                }","                else if(numofusers == 100){","                    cout << \"Database is full. Some users may have not been added.\" << endl;","                }","                else{","                    cout << \"Total users in the database: \" << numofusers << endl;","                }","                ","","                cout << endl;","                break;","","            case 3:","                // Display library -- printAllBooks","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                }","                else{","                    printAllBooks();","                }","                ","","","                cout << endl;","                break;","","            case 4:","                //  Get a rating -- getRating","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","","                // Use the below messages and match them to the return code. Update variables as needed.","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","               ","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                // take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","                int rating = getRating(userName, bookTitle);","                ","                if (rating == 0){","                    cout << userName << \" has not rated \" << bookTitle << endl;","                }","                else if(rating == -3){","                    cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;","                }","                else{","                    cout << userName << \" rated \" << bookTitle << \" with \" << rate << endl;","                }","                ","","                cout << endl;","                break;","","            case 5:","                // Get number of books the user has rated -- getCountReadBooks","","","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","                ","                int read = getCountReadBooks(userName);","                ","                if (read == 0){","                    cout << userName << \" has not rated any books.\" << endl;","                }","                else if(read == -3){","                    cout << userName << \" does not exist.\" << endl;","                }","                else{","                    cout << userName << \" rated \" << numRated << \" books.\" << endl;","                }","               ","","","            \tcout << endl;","                break;","","            case 6:","                // View user’s ratings -- viewRatings","","","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                viewRatings(userName);","","            \tcout << endl;","                break;","","            case 7:","                // Calculate the average rating for the book -- calcAvgRating","","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","","                double avg = calcAvgRating(bookTitle);","                ","                if (avg == -3){","                    cout << bookTitle << \" does not exist.\" << endl;","                }","                else{","                    cout << \"The average rating for \" << bookTitle << \" is \" << avgRating << endl;","                }","                ","            \tcout << endl;","                break;","            case 8:","                // Add a user to the database -- addUser","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                int add = addUser(userName);","                ","                if (add == 1){","                    cout << \"Welcome to the library \" << userName << endl;","                }","                else if(add == 0){","                    cout << userName << \" already exists in the database.\" << endl;","                }","                else if(add == -2){","                    cout << \"Database is already full. \" << userName << \" was not added.\" << endl;","                }","","              ","            \tcout << endl;","                break;","            case 9:","                // Check out the book -- checkOutBook","","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                // take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","                // take rating","                cout<<\"Enter rating for the book:\"<<endl;","                getline(cin, strRating);","","","                int checkout = checkOutBook(userName, bookTitle, strRating);","                ","                if (checkout == 1){","                    cout << \"We hope you enjoyed your book. The rating has been updated.\" << endl;","                }","                else if(checkout == -4){","                    cout << strRating << \" is not valid.\" << endl; ","                }","                else if(checkout == -3){","                    cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;","                }","                ","            \tcout << endl;","                break;","            case 10:","                // get recommendations  -- getRecommendations","","                if(numBooks == 0 && numUsers == 0){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                getRecommendations(userName);","","            \tcout << endl;","                break;","","            case 11:","                // quit","                cout << \"good bye!\" << endl;","                break;","","            default:","                cout << \"invalid input\" << endl;","                cout << endl;","        }","    }","","    return 0;","}"],"id":584},{"start":{"row":64,"column":0},"end":{"row":394,"column":1},"action":"insert","lines":["void displayMenu(){","\tcout << \"Select a numerical option:\" << endl;","\tcout << \"======Main Menu=====\" << endl;","\tcout << \"1. Read book file\" << endl;","\tcout << \"2. Read user file\" << endl;","\tcout << \"3. Print book list\" << endl;","\tcout << \"4. Get rating\" << endl;","\tcout << \"5. Find number of books user rated\" << endl;","\tcout << \"6. View ratings\" << endl;","\tcout << \"7. Get average rating\" << endl;","\tcout << \"8. Add a user\" << endl;","\tcout << \"9. Checkout a book\" << endl;","\tcout << \"10. Get recommendations\" << endl;","\tcout << \"11. Quit\" << endl;","}","","","int main(int argc, char const *argv[]) {","","","\t// temp variables","    string choice;","    string bookFileName;","    string userFileName;","    string userName, bookTitle;","    string strRating;","    Library mylib = Library();","","","    while (choice != \"11\") {","        displayMenu();","","        // take a menu opton","        getline(cin, choice);","","        // convert the `choice` to an integer","        int menuChoice = stoi(choice);","","        switch (menuChoice) {","","            case 1:{","                // Initialize library -- readBooks","                cout << \"Enter a book file name:\" << endl;","                getline(cin, bookFileName);","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","                int numofbooks = mylib.readBooks(bookFileName);","                ","                if (numofbooks == -1){","                    cout << \"No books saved to the database.\" << endl;","                }","                else if (numofbooks == -2){","                    cout << \"Database is already full. No books were added.\" << endl;","                }","                else if(numofbooks ==  50){","                    cout << \"Database is full. Some books may have not been added.\" << endl;","                }","                else{","                    cout << \"Total books in the database: \" << numofbooks << endl;","                }","               ","","","","                cout << endl;","                break;","            }","            case 2:{","                //  Initialize user catalog -- readRatings","","                cout << \"Enter a user file name:\" << endl;","                getline(cin, userFileName);","","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","","                int numofusers = mylib.readRatings(userFileName);","                ","                if(numofusers == -1){","                    cout << \"No users saved to the database.\" << endl;","                }","                else if(numofusers == -2){","                    cout << \"Database is already full. No users were added.\" << endl;","                }","                else if(numofusers == 100){","                    cout << \"Database is full. Some users may have not been added.\" << endl;","                }","                else{","                    cout << \"Total users in the database: \" << numofusers << endl;","                }","                ","","                cout << endl;","                break;","            }","            case 3:{","                // Display library -- printAllBooks","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                }","                else{","                    mylib.printAllBooks();","                }","                ","","","                cout << endl;","                break;","            }","            case 4:{","                //  Get a rating -- getRating","","                //////////////////////////////////////////////////////////////////////////","                // Your code here. Call the appropriate function(s).","                //////////////////////////////////////////////////////////////////////////","","                // Use the below messages and match them to the return code. Update variables as needed.","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","               ","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                // take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","                int rating = mylib.getRating(userName, bookTitle);","                ","                if (rating == 0){","                    cout << userName << \" has not rated \" << bookTitle << endl;","                }","                else if(rating == -3){","                    cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;","                }","                else{","                    cout << userName << \" rated \" << bookTitle << \" with \" << rating << endl;","                }","                ","","                cout << endl;","                break;","            }","            case 5:{","                // Get number of books the user has rated -- getCountReadBooks","","","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","                ","                int read = mylib.getCountReadBooks(userName);","                ","                if (read == 0){","                    cout << userName << \" has not rated any books.\" << endl;","                }","                else if(read == -3){","                    cout << userName << \" does not exist.\" << endl;","                }","                else{","                    cout << userName << \" rated \" << read << \" books.\" << endl;","                }","               ","","","            \tcout << endl;","                break;","            }","            case 6:{","                // View user’s ratings -- viewRatings","","","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                mylib.viewRatings(userName);","","            \tcout << endl;","                break;","            }","            case 7:{","                // Calculate the average rating for the book -- calcAvgRating","","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","","                double avg = mylib.calcAvgRating(bookTitle);","                ","                if (avg == -3){","                    cout << bookTitle << \" does not exist.\" << endl;","                }","                else{","                    cout << \"The average rating for \" << bookTitle << \" is \" << avg << endl;","                }","                ","            \tcout << endl;","                break;","            }","            case 8:{","                // Add a user to the database -- addUser","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                int add = mylib.addUser(userName);","                ","                if (add == 1){","                    cout << \"Welcome to the library \" << userName << endl;","                }","                else if(add == 0){","                    cout << userName << \" already exists in the database.\" << endl;","                }","                else if(add == -2){","                    cout << \"Database is already full. \" << userName << \" was not added.\" << endl;","                }","","              ","            \tcout << endl;","                break;","            }","            case 9:{","                // Check out the book -- checkOutBook","","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                // take book title","                cout << \"Enter book title:\" << endl;","                getline(cin, bookTitle);","","                // take rating","                cout<<\"Enter rating for the book:\"<<endl;","                getline(cin, strRating);","","","                int checkout = mylib.checkOutBook(userName, bookTitle, stoi(strRating));","                ","                if (checkout == 1){","                    cout << \"We hope you enjoyed your book. The rating has been updated.\" << endl;","                }","                else if(checkout == -4){","                    cout << strRating << \" is not valid.\" << endl; ","                }","                else if(checkout == -3){","                    cout << userName << \" or \" << bookTitle << \" does not exist.\" << endl;","                }","                ","            \tcout << endl;","                break;","            }","            case 10:{","                // get recommendations  -- getRecommendations","","                if(mylib.readBooks(bookFileName) == -1 && mylib.readRatings(userFileName) == -1){","                    cout << \"Database has not been fully initialized.\" << endl;","                    break;","                }","","                // If the database has not been initialized","                // cout << \"Database has not been fully initialized.\" << endl;","","        \t\t// take user name","                cout << \"Enter username:\" << endl;","                getline(cin, userName);","","                mylib.getRecommendations(userName);","","            \tcout << endl;","                break;","            }","            case 11:{","                // quit","                cout << \"good bye!\" << endl;","                break;","            }","            default:{","                cout << \"invalid input\" << endl;","                cout << endl;","            }","        }","    }","","    return 0;","}"]}],[{"start":{"row":8,"column":0},"end":{"row":11,"column":19},"action":"remove","lines":["#include \"Book.h\"","#include \"Book.cpp\"","#include \"User.h\"","#include \"User.cpp\""],"id":585}]]},"ace":{"folds":[],"scrolltop":4636,"scrollleft":0,"selection":{"start":{"row":389,"column":0},"end":{"row":389,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":271,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1553381304128,"hash":"65d9ab01fd94c1264a13996e5830a2fba3373fef"}